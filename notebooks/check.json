{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Interactive Symbolic Verification\n",
    "\n",
    "This notebook is for testing the `verifier.py` module on different mathematical expressions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import sys\n",
    "import os\n",
    "# Add the 'src' directory to the Python path\n",
    "sys.path.append(os.path.abspath(os.path.join('..', 'src')))\n",
    "\n",
    "from verifier import verify_step\n",
    "import sympy"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Test Case 1: Correct Algebraic Expansion"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "before = \"(x + y)**2\"\n",
    "after = \"x**2 + 2*x*y + y**2\"\n",
    "\n",
    "result = verify_step(before, after)\n",
    "print(f\"Verification result: {result['verified']}\")\n",
    "print(f\"Reason: {result['reason']}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Test Case 2: Incorrect Derivative"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "before = \"Derivative(sin(x), x)\"\n",
    "after = \"-cos(x)\" # Incorrect, should be cos(x)\n",
    "\n",
    "result = verify_step(before, after)\n",
    "print(f\"Verification result: {result['verified']}\")\n",
    "print(f\"Reason: {result['reason']}\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Test Case 3: Correct Integral"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "before = \"Integral(x**2, x)\" \n",
    "after = \"x**3 / 3\"\n",
    "\n",
    "result = verify_step(before, after)\n",
    "print(f\"Verification result: {result['verified']}\")\n",
    "print(f\"Reason: {result['reason']}\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "name": "python"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}